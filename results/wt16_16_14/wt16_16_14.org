#+PROPERTY: header-args:sage  :session result


#+BEGIN_SRC sage :exports none
  from e8theta_degree3.hecke_module import (HalfIntMatElement, spinor_l_euler_factor,
                                            rankin_convolution_degree1, hecke_poly_degree1,
                                            from_spinor_to_standard_l)
  from e8theta_degree3.gl3_repn import gl3_repn_module
  from e8theta_degree3.young_tableau import YoungTableu
  from e8theta_degree3.results.data.data_utils import (data_dir, half_int_mat_to_list, sort_ts,
                                                       factorization_normalized, factor_latex)

  @cached_function
  def wt_16_16_14_ls():
      return load(os.path.join(data_dir(), "wt16_16_14.sobj"))


  ts = [[ZZ(1), ZZ(1) / ZZ(2), ZZ(1) / ZZ(2), ZZ(1) / ZZ(2), ZZ(1),
         ZZ(1) / ZZ(2), ZZ(1) / ZZ(2), ZZ(1) / ZZ(2), ZZ(1)],
        [ZZ(1), ZZ(0), ZZ(0), ZZ(0), ZZ(1), ZZ(0), ZZ(0), ZZ(0), ZZ(1)],
        [ZZ(1), ZZ(0), ZZ(0), ZZ(0), ZZ(1), ZZ(0), ZZ(0), ZZ(0), ZZ(2)],
        [ZZ(1), ZZ(0), ZZ(0), ZZ(0), ZZ(2), ZZ(0), ZZ(0), ZZ(0), ZZ(2)],
        [ZZ(2), ZZ(1), ZZ(1), ZZ(1), ZZ(2), ZZ(1), ZZ(1), ZZ(1), ZZ(2)],
        [ZZ(2), ZZ(0), ZZ(0), ZZ(0), ZZ(2), ZZ(0), ZZ(0), ZZ(0), ZZ(2)],
        [ZZ(1), ZZ(1) / ZZ(2), ZZ(1) / ZZ(2), ZZ(1) / ZZ(2), ZZ(1),
         ZZ(1) / ZZ(2), ZZ(1) / ZZ(2), ZZ(1) / ZZ(2), ZZ(3)],
        [ZZ(1), ZZ(0), ZZ(0), ZZ(0), ZZ(1), ZZ(0), ZZ(0), ZZ(0), ZZ(4)],
        [ZZ(1), ZZ(0), ZZ(0), ZZ(0), ZZ(3), ZZ(1), ZZ(0), ZZ(1), ZZ(3)],
        [ZZ(3), ZZ(1), ZZ(1), ZZ(1), ZZ(3), -ZZ(1), ZZ(1), -ZZ(1), ZZ(3)],
        [ZZ(2), ZZ(0), ZZ(0), ZZ(0), ZZ(2), ZZ(0), ZZ(0), ZZ(0), ZZ(4)],
        [ZZ(1), ZZ(0), ZZ(0), ZZ(0), ZZ(4), ZZ(0), ZZ(0), ZZ(0), ZZ(4)]]

  Himts = sort_ts([HalfIntMatElement(matrix(3, t)) for t in ts])
  T0 = HalfIntMatElement(matrix([[1, 1 / 2, 1 / 2], [1 / 2, 1, 1 / 2], [1 / 2, 1 / 2, 1]]))
  T1 = HalfIntMatElement(diagonal_matrix([1, 1, 1]))
  fc_dct1, fc_dct2 = wt_16_16_14_ls()
  i = QuadraticField(-1, name="i").gen()
#+END_SRC

#+RESULTS:

* Theta series

SSYTs of weight (2, 2, 0) are sorted as follows.
#+BEGIN_SRC sage :exports results
  for b in gl3_repn_module((2, 2, 0)).basis():
      print b.right_tableau
      print ""
#+END_SRC

#+RESULTS:
#+begin_example
[1, 1]
[2, 2]

[1, 1]
[2, 3]

[1, 1]
[3, 3]

[1, 2]
[2, 3]

[1, 2]
[3, 3]

[2, 2]
[3, 3]
#+end_example

Let Theta0 be the theta series associated with the non-decomposable even unimodular lattice of rank 16
and the triple of vectors of length 16 below:

#+BEGIN_SRC sage :exports results
  matrix(3, [-5, -i, 5, 9*i, -4, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 5*i, 0, -2*i, -2, 0, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 6*i, 0, -2*i, -3, -i, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0])
#+END_SRC

#+RESULTS:
: [  -5   -i    5  9*i   -4    0    4    0    0    0    0    0    0    0    0    0]
: [   3  5*i    0 -2*i   -2    0   -4    0    0    0    0    0    0    0    0    0]
: [   4  6*i    0 -2*i   -3   -i   -4    0    0    0    0    0    0    0    0    0]

#+BEGIN_SRC sage :exports none
  print latex(matrix(3, [-5, -i, 5, 9*i, -4, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 5*i, 0, -2*i, -2, 0, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 6*i, 0, -2*i, -3, -i, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
#+END_SRC

#+RESULTS:
: \left(\begin{array}{rrrrrrrrrrrrrrrr}
: -5 & -\sqrt{-1} & 5 & 9 \sqrt{-1} & -4 & 0 & 4 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\
: 3 & 5 \sqrt{-1} & 0 & -2 \sqrt{-1} & -2 & 0 & -4 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\
: 4 & 6 \sqrt{-1} & 0 & -2 \sqrt{-1} & -3 & -\sqrt{-1} & -4 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0
: \end{array}\right)


Then Fourier coefficients of Theta0 is given as in [[file:theta0.csv][Theta0]].
# (progn (re-search-forward "|") (org-table-export "./theta0.csv" "orgtbl-to-csv"))
#+BEGIN_SRC sage :results table :exports none
  [(half_int_mat_to_list(t), fc_dct1[t]) for t in Himts]
#+END_SRC

#+RESULTS:
| [1, 1, 1, 1, 1, 1]  | (-50266795106304000, -16755598368768000, -50266795106304000, 16755598368768000, -16755598368768000, -50266795106304000)                                                    |
| [1, 1, 1, 0, 0, 0]  | (1206765184981401600, 0, 1206765184981401600, 0, 0, 1206765184981401600)                                                                                                   |
| [1, 1, 2, 0, 0, 0]  | (297618534091771084800, 0, -58757241590356377600, 0, 0, -58757241590356377600)                                                                                             |
| [1, 1, 3, 1, 1, 1]  | (11661896464662528000, 3887298821554176000, 752164406639709388800, -3887298821554176000, 374138553909077606400, 752164406639709388800)                                     |
| [1, 1, 4, 0, 0, 0]  | (-5460756574266772684800, 0, -32391215209271368089600, 0, 0, -32391215209271368089600)                                                                                     |
| [1, 2, 2, 0, 0, 0]  | (7862557740478601625600, 0, 7862557740478601625600, 0, 0, -57606527169541334630400)                                                                                        |
| [2, 2, 2, 2, 2, 2]  | (30514165477637986713600, 10171388492545995571200, 30514165477637986713600, -10171388492545995571200, 10171388492545995571200, 30514165477637986713600)                    |
| [1, 3, 3, 2, 0, 0]  | (-2200973557108382996889600, 45989816906478413414400, -2200973557108382996889600, 0, 0, -4413131757769294086144000)                                                        |
| [2, 2, 2, 0, 0, 0]  | (-782015778237016178688000, 0, -782015778237016178688000, 0, 0, -782015778237016178688000)                                                                                 |
| [1, 4, 4, 0, 0, 0]  | (116589938893692082323456000, 0, 116589938893692082323456000, 0, 0, 1108609995719264333463552000)                                                                          |
| [2, 2, 4, 0, 0, 0]  | (-203339340542578649569689600, 0, -114419214155749629571891200, 0, 0, -114419214155749629571891200)                                                                        |
| [3, 3, 3, -2, 2, 2] | (84161577780365946047692800, -42080788890182973023846400, 84161577780365946047692800, -42080788890182973023846400, 42080788890182973023846400, 84161577780365946047692800) |

Let Theta1 be the theta series associated with the following three vectors:
#+BEGIN_SRC sage :exports results
  matrix(3, [3, 7*i, -3, i, -4, 0, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 5*i, 0, -2*i, -2, 0, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, -3*i, -6, 8*i, 0, 2*i, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0])
#+END_SRC

#+RESULTS:
: [   3  7*i   -3    i   -4    0   -4    0    0    0    0    0    0    0    0    0]
: [   3  5*i    0 -2*i   -2    0   -4    0    0    0    0    0    0    0    0    0]
: [  -5 -3*i   -6  8*i    0  2*i    4    0    0    0    0    0    0    0    0    0]

#+BEGIN_SRC sage :exports none
  print latex(matrix(3, [3, 7*i, -3, i, -4, 0, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 5*i, 0, -2*i, -2, 0, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, -3*i, -6, 8*i, 0, 2*i, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0]))
#+END_SRC

#+RESULTS:
: \left(\begin{array}{rrrrrrrrrrrrrrrr}
: 3 & 7 \sqrt{-1} & -3 & \sqrt{-1} & -4 & 0 & -4 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\
: 3 & 5 \sqrt{-1} & 0 & -2 \sqrt{-1} & -2 & 0 & -4 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \\
: -5 & -3 \sqrt{-1} & -6 & 8 \sqrt{-1} & 0 & 2 \sqrt{-1} & 4 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0
: \end{array}\right)


Then Fourier coefficients of Theta1 are given as in [[file:theta1.csv][Theta1]].
# (progn (re-search-forward "|") (org-table-export "./theta1.csv" "orgtbl-to-csv"))
#+BEGIN_SRC sage :results table :exports none
  [(half_int_mat_to_list(t), fc_dct2[t]) for t in Himts]
#+END_SRC

#+RESULTS:
| [1, 1, 1, 1, 1, 1]  | (-6220418855731200, -2073472951910400, -6220418855731200, 2073472951910400, -2073472951910400, -6220418855731200)                                                    |
| [1, 1, 1, 0, 0, 0]  | (161104073620193280, 0, 161104073620193280, 0, 0, 161104073620193280)                                                                                                |
| [1, 1, 2, 0, 0, 0]  | (38100793902854307840, 0, -8754015879907246080, 0, 0, -8754015879907246080)                                                                                          |
| [1, 1, 3, 1, 1, 1]  | (1443137174529638400, 481045724843212800, 94349968142279639040, -481045724843212800, 46934461208718213120, 94349968142279639040)                                     |
| [1, 1, 4, 0, 0, 0]  | (-616064642958848163840, 0, -3750086772310860103680, 0, 0, -3750086772310860103680)                                                                                  |
| [1, 2, 2, 0, 0, 0]  | (1026126101543890452480, 0, 1026126101543890452480, 0, 0, -7389313951206809272320)                                                                                   |
| [2, 2, 2, 2, 2, 2]  | (3678337537919554682880, 1226112512639851560960, 3678337537919554682880, -1226112512639851560960, 1226112512639851560960, 3678337537919554682880)                    |
| [1, 3, 3, 2, 0, 0]  | (-272330638676977180999680, -3628369765347077652480, -272330638676977180999680, 0, 0, -544997989722694562611200)                                                     |
| [2, 2, 2, 0, 0, 0]  | (-115754327374819649126400, 0, -115754327374819649126400, 0, 0, -115754327374819649126400)                                                                           |
| [1, 4, 4, 0, 0, 0]  | (15935323600507240238284800, 0, 15935323600507240238284800, 0, 0, 139524473191309206198681600)                                                                       |
| [2, 2, 4, 0, 0, 0]  | (-27398966407676535955783680, 0, -13250978970123564440616960, 0, 0, -13250978970123564440616960)                                                                     |
| [3, 3, 3, -2, 2, 2] | (9073611164392486065930240, -4536805582196243032965120, 9073611164392486065930240, -4536805582196243032965120, 4536805582196243032965120, 9073611164392486065930240) |


* Eigenform
Let =a= be a root of =x^2 - 8640*x - 454569984= and =f30= a primitive form of weight 30, degree 1 and level 1.
Then =a= is the Hecke eigenvalue of =f30= with respect to =T(2)=.

And =(-3280338755058*a + 321567813112379328) Theta0 - 1900007009496106555 Theta1= is an eigenform.

Its 2-Euler factor of the spinor L is given as follows.
#+BEGIN_SRC sage :exports none
  K.<omega> = NumberField(x^2 - 8640*x - 454569984)
  F = {k: (-3280338755058*omega + 321567813112379328) * fc_dct1[k] - 1900007009496106555 * fc_dct2[k] for k in fc_dct1}
#+END_SRC

#+RESULTS:

#+BEGIN_SRC sage :exports none
  L_16_16_14_sqrt = QuadraticField(51349, name="alphpa")
  alpha = L_16_16_14_sqrt.gen()
  hom_16_16_14 = K.hom([96*alpha + 4320], L_16_16_14_sqrt)

  def _hom_vec(v):
      return [hom_16_16_14(a) for a in v]

  normalizing_num_K = 2010864448178284916318021222400*omega + 35057135523914764908674699545804800
#+END_SRC

#+RESULTS:

# (progn (re-search-forward "|") (org-table-export "./eigenform0.csv" "orgtbl-to-csv"))
#+BEGIN_SRC sage :results table
  f16_16_14_normzlied_eigen = [(half_int_mat_to_list(t), str(_hom_vec(F[t].vector/normalizing_num_K))) for t in Himts]
  f16_16_14_normzlied_eigen
#+END_SRC

#+RESULTS:
| [1, 1, 1, 1, 1, 1]  | [-189*alphpa + 42828, -63*alphpa + 14276, -189*alphpa + 42828, 63*alphpa - 14276, -63*alphpa + 14276, -189*alphpa + 42828]                                                                                                             |
| [1, 1, 1, 0, 0, 0]  | [3952*alphpa - 895536, 0, 3952*alphpa - 895536, 0, 0, 3952*alphpa - 895536]                                                                                                                                                            |
| [1, 1, 2, 0, 0, 0]  | [1055808*alphpa - 239249472, 0, -147168*alphpa + 33348768, 0, 0, -147168*alphpa + 33348768]                                                                                                                                            |
| [1, 1, 3, 1, 1, 1]  | [43848*alphpa - 9936096, 14616*alphpa - 3312032, 2764872*alphpa - 626528800, -14616*alphpa + 3312032, 1375128*alphpa - 311608384, 2764872*alphpa - 626528800]                                                                          |
| [1, 1, 4, 0, 0, 0]  | [-23501056*alphpa + 5325412608, 0, -134634112*alphpa + 30508511616, 0, 0, -134634112*alphpa + 30508511616]                                                                                                                             |
| [1, 2, 2, 0, 0, 0]  | [26919232*alphpa - 6099984576, 0, 26919232*alphpa - 6099984576, 0, 0, -203634688*alphpa + 46144272384]                                                                                                                                 |
| [2, 2, 2, 2, 2, 2]  | [119592192*alphpa - 27099968256, 39864064*alphpa - 9033322752, 119592192*alphpa - 27099968256, -39864064*alphpa + 9033322752, 39864064*alphpa - 9033322752, 119592192*alphpa - 27099968256]                                            |
| [1, 3, 3, 2, 0, 0]  | [-8277292800*alphpa + 1875660824832, 636440832*alphpa - 144219311872, -8277292800*alphpa + 1875660824832, 0, 0, -16648731648*alphpa + 3772655420416]                                                                                   |
| [2, 2, 2, 0, 0, 0]  | [-1996259328*alphpa + 452359110656, 0, -1996259328*alphpa + 452359110656, 0, 0, -1996259328*alphpa + 452359110656]                                                                                                                     |
| [1, 4, 4, 0, 0, 0]  | [363390648320*alphpa - 82345507061760, 0, 363390648320*alphpa - 82345507061760, 0, 0, 4052112957440*alphpa - 918221710417920]                                                                                                          |
| [2, 2, 4, 0, 0, 0]  | [-653326221312*alphpa + 148045844054016, 0, -475378827264*alphpa + 107722331799552, 0, 0, -475378827264*alphpa + 107722331799552]                                                                                                      |
| [3, 3, 3, -2, 2, 2] | [383150166016*alphpa - 86823015026688, -191575083008*alphpa + 43411507513344, 383150166016*alphpa - 86823015026688, -191575083008*alphpa + 43411507513344, 191575083008*alphpa - 43411507513344, 383150166016*alphpa - 86823015026688] |


#+BEGIN_SRC sage :exports results
  spl2_16_16_14 = spinor_l_euler_factor(2, F)
  spl2_16_16_14.factor()
#+END_SRC

#+RESULTS:
: (1 + 393216*t + 549755813888*t^2) * (1 + 786432*t + 2199023255552*t^2) * (1 + (24*omega)*t + (17694720*omega - 958826283008)*t^2 + (26388279066624*omega)*t^3 + 1208925819614629174706176*t^4)

This satisfies conjecture 7.7 (iii) for =a = 12=, =c = 10= and =p = 2=.

#+BEGIN_SRC sage :exports none
_R.<t> = ZZ[]
spl2_16_16_14.factor()
from_spinor_to_standard_l(spl2_16_16_14).factor()
#+END_SRC

#+RESULTS:
: (1 + 393216*t + 549755813888*t^2) * (1 + 786432*t + 2199023255552*t^2) * (1 + (24*omega)*t + (17694720*omega - 958826283008)*t^2 + (26388279066624*omega)*t^3 + 1208925819614629174706176*t^4)
: (1 - t) * (1 + 55/32*t + t^2) * (1 + (-1/32768*omega)*t + 1/2*t^2) * (1 + (-1/16384*omega)*t + 2*t^2)

#+BEGIN_SRC sage :exports none
  print factor_latex((1 + 393216*t + 549755813888*t^2) * (1 + 786432*t + 2199023255552*t^2))
  print factor(1208925819614629174706176)
#+END_SRC

#+RESULTS:
: \left(1 + 2^{17} \cdot 3 t + 2^{39} t^{2}\right)\left(1 + 2^{18} \cdot 3 t + 2^{41} t^{2}\right)
: 2^80

#+BEGIN_SRC sage :exports none
  _R1.<omega> = ZZ[]
  print factor(24*omega)
  print factor(17694720*omega - 958826283008)
  print factor(26388279066624*omega)
  print factor(1208925819614629174706176)
#+END_SRC

#+RESULTS:
: 3 * 2^3 * omega
: 2^17 * (135*omega - 7315264)
: 3 * 2^43 * omega
: 2^80

#+BEGIN_SRC sage :exports none
  print factor_latex((1 - t) * (1 + 55/32*t + t^2) )
#+END_SRC

#+RESULTS:
: \left(1 -  t\right)\left(1 + 2^{-5} \cdot 5 \cdot 11 t +  t^{2}\right)

#+BEGIN_SRC sage :exports none
  f30 = CuspForms(1, 30).newforms("a")[0]
  f12 = CuspForms(1, 12).basis()[0]
  rankin_convolution_degree1(f30, f12, 2)
#+END_SRC

#+RESULTS:
: 1208925819614629174706176*t^4 + 26388279066624*a0*t^3 + (17694720*a0 - 958826283008)*t^2 + 24*a0*t + 1
