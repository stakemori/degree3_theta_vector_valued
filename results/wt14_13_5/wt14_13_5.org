#+PROPERTY: header-args:sage  :session result

#+BEGIN_SRC sage :exports none
  import os
  from e8theta_degree3.hecke_module import (HalfIntMatElement, spinor_l_euler_factor,
                                            rankin_convolution_degree1, from_spinor_to_standard_l)
  from e8theta_degree3.gl3_repn import GL3RepnElement
  from e8theta_degree3.results.data.data_utils import (data_dir, half_int_mat_to_list, sort_ts, factor_latex,
                                                       factorization_normalized)

  @cached_function
  def _wt_14_13_5_ls():
      l = load(os.path.join(data_dir(), "wt14_13_5.sobj"))
      d = {HalfIntMatElement(t): GL3RepnElement(v, (14, 13, 5)) for t, v in l}
      ts = sort_ts([t for t in d.keys()])
      return [(t, d[t]) for t in ts]
#+END_SRC

#+RESULTS:

* Fourier coefficients of the theta series

A list of length six
#+BEGIN_SRC sage :exports results
  _ = var("a, b, c, d, e, f")
  [a, b, c, d, e, f]
#+END_SRC

#+RESULTS:
: [a, b, c, d, e, f]

corresponds to the following half integral matrix.
#+BEGIN_SRC sage :exports results
  matrix([[a, f/2, e/2], [f/2, b, d/2], [e/2, d/2, c]])
#+END_SRC

#+RESULTS:
: [    a 1/2*f 1/2*e]
: [1/2*f     b 1/2*d]
: [1/2*e 1/2*d     c]


Fourier coefficients of the (normalized) theta series of weight (14, 13, 5) are given as in [[file:theta0.csv][Theta0]].
# (progn (re-search-forward "|") (org-table-export "./theta0.csv" "orgtbl-to-csv"))
#+BEGIN_SRC sage :results table :exports none
  [(half_int_mat_to_list(a), v.vector/145211960026673971200) for a, v in _wt_14_13_5_ls()]
#+END_SRC

#+RESULTS:
| [1, 1, 1, 1, 1, 1] | (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, -3, -6, -6, -3, -5, 0, 0, 0, 0, 0, 0, 0, 0, -5, -2, 0, -3, 3, 0, 2, 5, 0, 0, 0, 0, 0, 0, 6, 0, 3, 3, 0, 6, 0, 0, 0, 0, 0, 0, -3, 2, -2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)                                                                                                                                                                                                                                                                                     |
| [1, 1, 1, 0, 0, 0] | (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -40, -40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)                                                                                                                                                                                                                                                                                          |
| [1, 1, 2, 0, 0, 0] | (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -480, 0, 0, 144, 288, 0, 0, 0, 720, 0, 0, 10080, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -144, 144, 0, 0, 0, -1152, 0, 0, -1440, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 720, 0, 0, 1440, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10080, 0, 0)                                                                                                                                                                                                                                                            |
| [1, 1, 3, 1, 1, 1] | (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -520, -312, -624, -432, 480, 320, 400, 2160, -120, 9240, 3360, 0, 0, 0, -520, -208, 0, -24, 1200, 672, -160, 2720, 360, 11760, 8160, 0, 0, 0, 624, 192, 1200, 528, 0, 3024, 2640, 6480, 8160, 0, 0, 0, 480, 160, 160, 2880, 2640, -3840, 0, 0, 0, 0, -400, 1760, 360, -11400, -8160, 0, 0, 0, -120, -9360, -8160, 0, 0, 0, -3360, 0, 0)                                                                                                                                                                 |
| [2, 2, 2, 2, 2, 2] | (0, 53760, 30720, 7680, 0, -7680, -30720, -53760, 0, 0, 0, 26880, 26880, 15360, 15360, 3840, 3840, 0, 0, -3840, -3840, -15360, -15360, -26880, -26880, 0, 0, 53760, 26880, 11520, 0, 0, 5440, 4800, 9600, 9600, 4800, 5440, 0, 0, 11520, 26880, 53760, -30720, -15360, -11520, 5440, 640, 0, 4800, -4800, 0, -640, -5440, 11520, 15360, 30720, 7680, 3840, 3840, -9600, 0, -4800, -4800, 0, -9600, 3840, 3840, 7680, 0, 0, -3840, 4800, -640, 640, -4800, 3840, 0, 0, -7680, -3840, 11520, 0, 0, 11520, -3840, -7680, 30720, 15360, -11520, 11520, -15360, -30720, -53760, -26880, -26880, -53760, 0, 0) |
| [1, 3, 3, 2, 0, 0] | (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -161280, -80640, -149760, 0, -76800, 36160, -134976, -94848, -94848, -134976, 36160, -76800, 0, -149760, -80640, -161280, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 207360, -580800, 169536, -181632, -124032, -193152, -193152, -124032, -181632, 169536, -580800, 207360, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1334400, 1984320, 292800, 663040, 663040, 292800, 1984320, 1334400, 0, 0, 0, 0, 0, 0, -14259840, -12969600, -12969600, -14259840, 0, 0)                                                                      |
| [2, 2, 2, 0, 0, 0] | (0, 0, 0, 291840, 0, -291840, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64000, 0, 0, -125952, -125952, 0, 0, 64000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 291840, 0, 0, 125952, 0, 0, 0, 0, 125952, 0, 0, 291840, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -291840, 0, 0, -64000, -64000, 0, 0, -291840, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)                                                                                                                                                                                                                       |


Here SSYT of weight (9, 8, 0) are sorted as in [[file:SSYT.org][this file]].


* Euler factor at 2
#+BEGIN_SRC sage :exports none
  spl2 = spinor_l_euler_factor(2, dict(_wt_14_13_5_ls()))
#+END_SRC

#+RESULTS:

2-Euler factor of the spinor L-function of the theta.
#+BEGIN_SRC sage :exports results
  t = spl2.parent().gen()
  factorization_normalized(spl2)
#+END_SRC

#+RESULTS:
: (1 - 8192*t)^2 * (1 + 14080*t + 67108864*t^2) * (1 + 5184*t - 19791872*t^2 + 347892350976*t^3 + 4503599627370496*t^4)

#+BEGIN_SRC sage :rexports none
  print factor_latex(spl2)
#+END_SRC

#+RESULTS:
: \left(1 - 2^{13} t\right)^{2}\left(1 + 2^{8} \cdot 5 \cdot 11 t + 2^{26} t^{2}\right)\left(1 + 2^{6} \cdot 3^{4} t - 2^{17} \cdot 151 t^{2} + 2^{32} \cdot 3^{4} t^{3} + 2^{52} t^{4}\right)


#+BEGIN_SRC sage :exports none
  factorization_normalized(from_spinor_to_standard_l(spl2, 2))
#+END_SRC

#+RESULTS:
: (1 - t) * (1 + 55/32*t + t^2) * (1 + 81/128*t - 151/512*t^2 + 81/128*t^3 + t^4)

#+BEGIN_SRC sage :exports none
  print factor_latex(from_spinor_to_standard_l(spl2, 2))
#+END_SRC

#+RESULTS:
: \left(1 -  t\right)\left(1 + 2^{-5} \cdot 5 \cdot 11 t +  t^{2}\right)\left(1 + 2^{-7} \cdot 3^{4} t - 2^{-9} \cdot 151 t^{2} + 2^{-7} \cdot 3^{4} t^{3} +  t^{4}\right)


#+BEGIN_SRC sage :exports none
  f12 = CuspForms(1, 12).basis()[0]
  f16 = CuspForms(1, 16).basis()[0]
#+END_SRC

#+RESULTS:

2-Euler factor of the Rankin convolution of =f12= and =f16=.
Here =f12= (resp. =f16=) is the primitive form of weight =12= (resp. =16=) and level 1.
#+BEGIN_SRC sage :exports results
  rankin_convolution_degree1(f12, f16, 2)
#+END_SRC

#+RESULTS:
: 1 + 5184*t - 19791872*t^2 + 347892350976*t^3 + 4503599627370496*t^4

2-Euler factor of the Rankin convolution of =f12= and =f12= substituted =t= by =4*t=.

#+BEGIN_SRC sage :exports results
  rankin_convolution_degree1(f12, f12, 2).subs({t: 2^2 * t}).factor()
#+END_SRC

#+RESULTS:
: (-1 + 8192*t)^2 * (1 + 14080*t + 67108864*t^2)

#+BEGIN_SRC sage :exports none
  spl2 == rankin_convolution_degree1(f12, f16, 2) * rankin_convolution_degree1(f12, f12, 2).subs({t: 2^2 * t})
#+END_SRC

#+RESULTS:
: True
